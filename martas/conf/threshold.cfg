##  ----------------------------------------------------------------
##           CONFIGURATION DATA for THRESHOLD.PY
##  ----------------------------------------------------------------

# MARTAS directory
martasdir            :   /my/home/MARTAS


# Define data source (file, db, ...)
source               :   mydatasource


# If source = db then define data base credentials created by addcred (MARTAS)
dbcredentials        :   mydbcred


# If source = file define the MARTAS buffer base path
bufferpath           :   /mybasedir/mqtt/


# Logfile (a json style dictionary, which contains statusmessages)
logfile              :   /mylogpath/threshold.log


# Notifaction (uses martaslog class, one of email, telegram, mqtt, log)
notification         :   mynotificationtype
notificationconfig   :   /myconfpath/mynotificationtype.cfg


# Report level ("full" will report all changes, also "fine" values, "partial" only reports
# deviations, which won't be repoted for the first change)
reportlevel          :   partial


# serial communication for switch commands (based on ardcomm.py (MARTAS/app)
#port                :   device to which command is send - default is /dev/ttyACM0
#baudrate            :   default is 9600
#parity              :   default is "N"
#bytesize            :   default is 8
#stopbits            :   default is 1
#timeout             :   default is 2
#eol                 :   end of line - default is /r



#parameter (all given parameters are checked in the given order, use semicolons for parameter list):
# sensorid; timerange to check; key to check, value, function, state,statusmessage,switchcommand(optional)
1  :  DS18B20XX,1800,t1,5,average,below,default,swP:4:1
2  :  DS18B20XX,1800,t1,10,median,above,default,swP:4:0
3  :  DS18B20XZ,600,t2,10,max,below,ok
4  :  DS18B20XZ,600,t2,10,max,above,warning at week
5  :  DS18B20XZ,600,t2,20,max,above,alarm issued at date
6  :  DS18B20XZ,600,t2,3,stddev,above,flapping state
7  :  DS18B20XX,1800,var3,10.8,median,below,voltage critical,,/etc/martas/shutdown.sh
#to be continued...

# SensorID, key:  if sensorid and key of several lines are identical, always the last valid test line defines the message
#                 Therefore use warning thresholds before alert thresholds
# Function:       can be one of max, min, median, average(mean), stddev
# State:          can be one below, above, equal
# Statusmessage:  default is replaced by "Current 'function' 'state' 'value', e.g. (1) "Current average below 5"
#                 the following words (last occurrence) are replace by datetime.utcnow(): date, month, year, (week), hour, minute
#                 "date" is replaced by current date e.g. 2019-11-22
#                 "month" is replaced by current month e.g. 2019-11
#                 "week" is replaced by current calender week e.g. 56
#                 "minute" looks like 2019-11-22 13:10
#                 -> "date" changes the statusmessage every day and thus a daily notification is triggered as long a alarm condition is active


## Description: Parameterset "1":  if t1 average of last 30 min (1800 sec) is falling below 5 degrees
## then use statusmessage and eventually send switchcommand to serial port
## IMPORTANT: statusmessage should not contain semicolons, colons and commas; generally avoid special characters
